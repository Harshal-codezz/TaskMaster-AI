<html lang="en" style="outline: rgb(0, 0, 0) dotted 3px; outline-offset: 1px;"><head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <style>
                body { 
                  margin: 0; 
                  padding: 16px; 
                  background-color: #ffffff;
                }
              </style>
            <style id="inspect-hover-style">
          * { cursor: crosshair !important; }
        </style></head>
            <body style="cursor: crosshair;">


    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Personal Assistant</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }
        
        .container {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        h1 {
            color: #333;
            text-align: center;
        }
        
        .input-area {
            display: flex;
            margin: 20px 0;
        }
        
        #userInput {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            margin-left: 10px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #3367d6;
        }
        
        .conversation {
            border: 1px solid #eee;
            border-radius: 4px;
            padding: 15px;
            min-height: 300px;
            max-height: 400px;
            overflow-y: auto;
            background-color: #fafafa;
        }
        
        .message {
            margin-bottom: 15px;
            padding: 8px 12px;
            border-radius: 4px;
        }
        
        .user-message {
            background-color: #e3f2fd;
            text-align: right;
        }
        
        .assistant-message {
            background-color: #f1f1f1;
            text-align: left;
        }
        
        .task-list {
            margin-top: 20px;
        }
        
        .task-item {
            padding: 10px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
        }
    </style>


    <div class="container" style="">
        <h1 style="">AI Personal Assistant</h1>
        
        <div class="conversation" id="conversation" style="">
            <div class="message assistant-message" style="">
                Hi there! I'm your AI assistant. How can I help you?
            </div>
        </div>
        
        <div class="input-area">
            <input type="text" id="userInput" placeholder="Type your request...">
            <button id="sendButton">Send</button>
        </div>
        
        <div class="task-list">
            <h2>Your Tasks</h2>
            <div id="tasks">
                <!-- Tasks will appear here -->
            </div>
        </div>
    </div>

    <script>
        const sendButton = document.getElementById('sendButton');
        const userInput = document.getElementById('userInput');
        const conversation = document.getElementById('conversation');
        const tasksContainer = document.getElementById('tasks');
        
        function addMessage(text, isUser) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isUser ? 'user-message' : 'assistant-message'}`;
            messageDiv.textContent = text;
            conversation.appendChild(messageDiv);
            conversation.scrollTop = conversation.scrollHeight;
        }
        
        function processCommand(command) {
            if (command.toLowerCase().includes('task')) {
                const taskText = command.replace(/add task/i, '').trim();
                if (taskText) {
                    const taskItem = document.createElement('div');
                    taskItem.className = 'task-item';
                    taskItem.innerHTML = `
                        ${taskText}
                        <button onclick="this.parentElement.remove()">Complete</button>
                    `;
                    tasksContainer.appendChild(taskItem);
                    addMessage(`Added task: "${taskText}"`, false);
                }
            } else if (command.toLowerCase().includes('hello') || command.includes('hi')) {
                addMessage("Hello! How can I help you today?", false);
            } else {
                addMessage("I can help you manage tasks and answer questions. Try saying 'Add task [task description]'", false);
            }
        }
        
        sendButton.addEventListener('click', () => {
            const text = userInput.value.trim();
            if (text) {
                addMessage(text, true);
                userInput.value = '';
                processCommand(text);
            }
        });
        
        userInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendButton.click();
            }
        });
    </script>



          
        </body></html>
